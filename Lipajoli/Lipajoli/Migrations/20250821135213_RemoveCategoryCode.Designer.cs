// <auto-generated />
using System;
using Lipajoli.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lipajoli.Migrations
{
    [DbContext(typeof(BiblioContext))]
    [Migration("20250821135213_RemoveCategoryCode")]
    partial class RemoveCategoryCode
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.19");

            modelBuilder.Entity("Lipajoli.Models.Auteur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Auteurs");
                });

            modelBuilder.Entity("Lipajoli.Models.CategorieLivre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Nom")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Lipajoli.Models.Livre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategorieId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CodeUnique")
                        .HasColumnType("TEXT");

                    b.Property<string>("ISBN10")
                        .HasColumnType("TEXT");

                    b.Property<string>("ISBN13")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Prix")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titre")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.HasIndex("CodeUnique")
                        .IsUnique();

                    b.ToTable("Livres");
                });

            modelBuilder.Entity("Lipajoli.Models.LivreAuteur", b =>
                {
                    b.Property<int>("LivreId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AuteurId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LivreId", "AuteurId");

                    b.HasIndex("AuteurId");

                    b.ToTable("LivreAuteurs");
                });

            modelBuilder.Entity("Lipajoli.Models.Livre", b =>
                {
                    b.HasOne("Lipajoli.Models.CategorieLivre", "Categorie")
                        .WithMany("Livres")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("Lipajoli.Models.LivreAuteur", b =>
                {
                    b.HasOne("Lipajoli.Models.Auteur", "Auteur")
                        .WithMany("LivreAuteurs")
                        .HasForeignKey("AuteurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lipajoli.Models.Livre", "Livre")
                        .WithMany("LivreAuteurs")
                        .HasForeignKey("LivreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auteur");

                    b.Navigation("Livre");
                });

            modelBuilder.Entity("Lipajoli.Models.Auteur", b =>
                {
                    b.Navigation("LivreAuteurs");
                });

            modelBuilder.Entity("Lipajoli.Models.CategorieLivre", b =>
                {
                    b.Navigation("Livres");
                });

            modelBuilder.Entity("Lipajoli.Models.Livre", b =>
                {
                    b.Navigation("LivreAuteurs");
                });
#pragma warning restore 612, 618
        }
    }
}
